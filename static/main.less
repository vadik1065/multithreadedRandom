@widthControlElem: 250px;

* {
  padding: 0;
  margin: 0;
  font-size: 16px;
}

.main-container {
  float: left;
  display: flex;
  flex-direction: row-reverse;
  &_controls {
    padding: 5px 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}

.range {
  margin-top: 10px;
  display: flex;
  flex-direction: column;

  input[type="range"] {
    margin-top: 10px;
    width: @widthControlElem;
    overflow: hidden;
    -webkit-appearance: none;
    background-color: rgba(3, 150, 3, 0.699);
    border-radius: 5px;

    &::-webkit-slider-thumb {
      width: 10px;
      -webkit-appearance: none;
      height: 10px;
      border-radius: 50%;
      cursor: pointer;
      background: rgba(1, 85, 1, 0.75);
    }
  }

  &_value {
    margin-top: 7px;
    text-align: center;
  }
}

.form-generation_btn {
  margin-top: 40px;
  min-width: @widthControlElem;
  min-height: 40px;
  font-family: "Nunito", sans-serif;
  text-transform: uppercase;
  letter-spacing: 1.3px;
  font-weight: 700;
  color: #313133;
  background: rgba(0, 150, 0 0.44);
  border: none;
  border-radius: 1000px;
  box-shadow: 12px 12px 24px rgba(8, 44, 8, 0.44);
  transition: all 0.3s ease-in-out 0s;
  cursor: pointer;
  outline: none;
  position: relative;
  padding: 10px;

  &::before {
    content: "";
    border-radius: 1000px;
    min-width: calc(@widthControlElem + 12px);
    min-height: calc(40px + 12px);
    border: 6px solid rgba(0, 150, 0, 0.75);
    box-shadow: 0 0 60px rgba(0, 150, 0 0.44);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: all 0.3s ease-in-out 0s;
  }

  &:hover,
  &:focus {
    color: #313133;
    transform: translateY(-6px);
    &::before,
    &::before {
      opacity: 1;
    }

    &::after,
    &::after {
      animation: none;
      display: none;
    }

    &:disabled {
      border: none;
    }
  }

  &::after {
    content: "";
    width: 30px;
    height: 30px;
    border-radius: 100%;
    border: 6px solid rgba(0, 150, 0, 0.75);
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: ring 1.5s infinite;
  }

  &:disabled {
    animation: none;
    opacity: 0.5;
    cursor: wait;
    &:after {
      animation: none;
      display: none;
    }
    &::before {
      display: none;
      animation: none;
    }
  }
}

.terminal_itself {
  /* width: 500px; */
  width: calc(90vw - 300px);
  margin: 30px;
  height: calc((90vw - 300px) * 0.6);
  padding: 10px 15px;
  /* color: white; */
  color: rgb(3, 192, 3);
  font: 0.8rem Inconsolata, monospace;
  background-color: black;
  /* background-image: radial-gradient(
      rgba(0, 150, 0, 0.75), black 120%
    ); */
  min-height: 100px;
  word-wrap: normal;
  overflow: auto;
  box-shadow: 3px 3px 7px rgba(0, 0, 0, 0.425);

  &::-webkit-scrollbar {
    width: 7px;
    height: 7px;
  }

  &::-webkit-scrollbar-track {
    --webkit-box-shadow: 5px 5px 5px -5px rgba(34, 60, 80, 0.2) inset;
    background-color: #f9f9fd;
    border-radius: 10px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgb(3, 150, 3);
    background-image: -webkit-linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.25) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.25) 50%,
      rgba(255, 255, 255, 0.25) 75%,
      transparent 75%,
      transparent
    );
  }
}

@keyframes ring {
  0% {
    width: 30px;
    height: 30px;
    opacity: 1;
  }
  100% {
    width: @widthControlElem - 50;
    height: @widthControlElem - 50;
    opacity: 0;
  }
}

@media screen and (max-width: 600px) {
  .main-container {
    display: flex;
    flex-direction: column;
    float: none;
  }

  .terminal_itself {
    margin-left: 3vw;
    width: 88vw;
    height: 60vw;
  }
}

@media screen and (min-width: 1000px) {
  @MW1000widthControlElem: @widthControlElem * 1.5;

  * {
    font-size: 25px;
  }

  .form-generation_btn {
    min-width: @MW1000widthControlElem;
    padding: 10px 15px;
    &::before {
      min-width: calc(@MW1000widthControlElem + 12px);
    }
  }

  .range {
    input[type="range"] {
      width: @MW1000widthControlElem;
    }
  }

  .terminal_itself {
    width: calc(90vw - @MW1000widthControlElem);
  }
}
